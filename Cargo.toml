# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !!! CRITICAL WARNING - DO NOT MODIFY BINARY TARGETS              !!!
# !!! This project must ONLY build the following two executables:  !!!
# !!! 1. tagio-gui         - The client application                !!!
# !!! 2. tagio_relay_server - The relay server                     !!!
# !!! DO NOT add any other binary targets to this file             !!!
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

[package]
name = "tagio"
version = "0.1.9"
edition = "2021"
authors = ["TagIO Team"]
description = "A secure remote desktop application"
default-run = "tagio-gui"
autobins = false

[features]
default = ["client"]
client = [
    "egui", "eframe", "rfd", "image", "windows", 
    "webbrowser", "clipboard"
]
server = []

[dependencies]
# Core async runtime - needed by both client and server
tokio = { version = "1.33.0", features = [
    "rt-multi-thread", "macros", "sync", "time", "net", "io-util", "fs"
]}
anyhow = "1.0.75"
# Windows-specific features for the UI only - only needed for client
windows = { version = "0.52.0", features = [
    "Win32_UI_WindowsAndMessaging",
    "Win32_UI_Input_KeyboardAndMouse", 
    "Win32_Foundation",
    "Win32_Graphics_Gdi"
], optional = true }
# Image compression with minimal features - only needed for client
image = { version = "0.24", default-features = false, features = ["jpeg", "png"], optional = true }
serde = { version = "1.0.193", features = ["derive"] }
bincode = "1.3.3"
aes-gcm = "0.10.3"
rand = "0.8.5"
ctrlc = "3.4.1"
# File dialogs - only needed for client
rfd = { version = "0.12.0", optional = true }
# GUI framework - only needed for client
egui = { version = "0.26.0", optional = true }
eframe = { version = "0.26.0", default-features = false, features = ["default_fonts", "glow"], optional = true }
serde_json = "1.0.108"
dirs = "5.0.1"
# NAT traversal - necessary for peer connections
igd = "0.12.1"
stun-client = "0.1.4"
local-ip-address = "0.5.6"
uuid = { version = "1.3.0", features = ["v4"] }
# TLS support - critical for security
rustls = { version = "0.21.7", features = ["dangerous_configuration"] }
rustls-pemfile = "1.0.3"
tokio-rustls = "0.24.1"
rcgen = "0.11.3"
webpki-roots = "0.25.2"
# Time handling with minimal features
time = { version = "0.3.30", features = ["formatting"] }
# Logging with minimal overhead
log = "0.4.20"
env_logger = "0.10.0"
chrono = { version = "0.4.31", default-features = false, features = ["clock"] }
once_cell = "1.18.0"
socket2 = "0.5.9"
async-trait = "0.1.74"

# GUI DEPENDENCIES - only needed for client
# GUI Framework components
webbrowser = { version = "0.8.15", optional = true }
clipboard = { version = "0.5.0", optional = true }

# Client GUI
[[bin]]
name = "tagio-gui"
path = "src/main_gui.rs"
required-features = ["client"]

# Relay server
[[bin]]
name = "tagio_relay_server"
path = "src/bin/tagio_relay_server.rs"
required-features = ["server"]

[profile.release]
opt-level = "z"     # Optimize for size, not speed
lto = true          # Enable Link Time Optimization
codegen-units = 1   # Use a single codegen unit for better optimization
strip = true        # Strip symbols from binary
panic = "abort"     # Remove panic unwinding code
overflow-checks = false  # Disable integer overflow checks
debug = false       # No debug info at all

# Optimize dependencies as well
[profile.release.package."*"]
opt-level = "z"     # Optimize all dependencies for size too
debug = false

# Static linking for Windows
[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.52.0", features = [
    # Only keep UI-related features needed for the application
    "Win32_UI_WindowsAndMessaging",
    "Win32_UI_Input_KeyboardAndMouse", 
    "Win32_Foundation",
    "Win32_Graphics_Gdi"
]}

[profile.dev]
opt-level = 0
debug = 1  # Less debug info for faster builds
incremental = true

# Optimize dependencies even in debug builds
[profile.dev.package."*"]
opt-level = 1
debug = false

# Add a patch section at the end of the file
[patch.crates-io]
# These patches will be applied when building with the server feature only
# They create empty implementations to avoid GTK/ATK dependencies
atk-sys = { path = "./atk-sys-dummy" }
gtk-sys = { path = "./gtk-sys-dummy" }
gdk-sys = { path = "./gdk-sys-dummy" }
pango-sys = { path = "./pango-sys-dummy" }
cairo-sys-rs = { path = "./cairo-sys-rs-dummy" } 
